@charset "UTF-8";
/* ::root -
 * here we can define variables css {--} etc.
 *
 */
/* DESCRIPTION
 *
 * Andy Bell's Reset 
 *
 * https://piccalil.li/blog/a-modern-css-reset
 * https://andy-bell.co.uk/a-modern-css-reset
 * https://github.com/Andy-set-studio/modern-css-reset
 *
 * Note: please do not modify this file without 
 *       consulting.
 *
 *
 * Code scope: entire project
 */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults */
body {
  /* min-height: 100vh; */
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
/* input, */
/* button, */
/* textarea, */
/* select { */
/*   font: inherit; */
/* } */
/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.container {
  max-width: calc(100vw - 2rem);
  margin: 0 auto;
}

.flex {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.wrap {
  flex-wrap: wrap;
}

/* 5. utils -
 *    these styles are a set of general tool classes
 *    supporting the implementation of the project
 *
 */
/* Typography - 
 * separate ::root part for font definitions in the form of css variables {--}.
 * Examples:
 *   --fs-body: var(--fs-400);
 *   --fs-primary-heading: var(--fs-800);
 *   --fs-secondary-heading: var(--fs-700);
 *   --fs-nav: var(--fs-500);
 *   --fs-button: var(--fs-300);
 *
 */
/* 3. Components — these are styles for “mini” layouts, 
 *    such as buttons, form styles, profile pictures, 
 *    cards, etc. that can be used across the site.
 *
 */

/*# sourceMappingURL=main.css.map */
